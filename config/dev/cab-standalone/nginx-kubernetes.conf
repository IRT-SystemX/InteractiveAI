# docker compose DNS used to resolved users service
# resolver 127.0.0.11 ipv6=off;

# Log format to have msec in time + request processing time
map "$time_local:$msec" $time_local_ms {
    ~(^\S+)(\s+\S+):\d+\.(\d+)$ $1.$3$2;
}
log_format opfab-log '$remote_addr - $time_local_ms'
'"$request" $status $request_time $body_bytes_sent ';

log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name $host to: $upstream_addr: $request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time';

server {
    listen 80;
    server_name localhost cab-dev.irtsystemx.org;
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log opfab-log;

    ### CUSTOMIZATION - BEGIN
    # Url of the Authentication provider
    set $KeycloakBaseUrl "https://cab-keycloak.irtsystemx.org";
    # Realm associated to OperatorFabric within the Authentication provider
    set $OperatorFabricRealm "dev";
    # base64 encoded pair of authentication in the form of 'client-id:secret-id'
    set $ClientPairOFAuthentication "b3BmYWItY2xpZW50OmxlTWRIMk9OWGFnbWxmT3JzMFl0NUhwbGhQcWM1V1Bq" ;

    ### CUSTOMIZATION - END

    ###  OPFAB GENERIC CONFIGURATION  ###
    ###  BE CAREFUL WHEN MODIFYING    ###
    set $BasicValue "Basic $ClientPairOFAuthentication";
    set $KeycloakOpenIdConnect $KeycloakBaseUrl/auth/realms/$OperatorFabricRealm/protocol/openid-connect;
    gzip on;
    gzip_types application/javascript text/css;

    location / {
        add_header Cache-Control "no-cache";
        alias /usr/share/nginx/html/;
        try_files $uri $uri/ /index.html;
    }
    location = /external/ {
        add_header Cache-Control "no-cache";
        alias /usr/share/nginx/html/external/;
        index index.html index.htm;
    }
    location /ui/ {
        add_header Cache-Control "no-cache";
        alias /usr/share/nginx/html/;
        index index.html index.htm;
    }
    location /auth/check_token {
        add_header Cache-Control "no-cache";
        proxy_set_header Host cab-keycloak.irtsystemx.org;
        proxy_set_header Authorization $BasicValue ;
        proxy_pass $KeycloakOpenIdConnect/token/introspect;
    }
    location /auth/token {
        add_header Cache-Control "no-cache";
        proxy_set_header Host cab-keycloak.irtsystemx.org;
        proxy_set_header Authorization $BasicValue ;
        proxy_pass $KeycloakOpenIdConnect/token;
    }
    location /auth/code/ {
        add_header Cache-Control "no-cache";
        proxy_set_header Host cab-keycloak.irtsystemx.org;
        proxy_set_header Authorization $BasicValue ;
        proxy_pass $KeycloakOpenIdConnect/auth?response_type=code&client_id=opfab-client&$args;
    }

    location /auth {
        add_header Cache-Control "no-cache";
        proxy_set_header X-Forwarded-For $proxy_protocol_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host cab-keycloak.irtsystemx.org;
        proxy_pass $KeycloakBaseUrl/auth;
    }

    # To be sure new files are downloaded when version change
    # we set no-cache for json config files and for i18n files
    location /config/web-ui.json {
        add_header Cache-Control "no-cache";
        alias /usr/share/nginx/html/opfab/web-ui.json;
    }
    location /config/ui-menu.json {
        add_header Cache-Control "no-cache";
        alias /usr/share/nginx/html/opfab/ui-menu.json;
    }
    location /ui/assets/i18n/ {
        add_header Cache-Control "no-cache";
        alias /usr/share/nginx/html/assets/i18n/;
    }

    location /businessconfig {
        add_header Cache-Control "no-cache";
        proxy_pass http://businessconfig.cab-dev.svc.cluster.local:8080;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location ~ "^/users/internal/(.*)" {
        return 404;
    }

    location ~ "^/users/(.*)" {
        add_header Cache-Control "no-cache";
        proxy_pass http://users.cab-dev.svc.cluster.local:8080/$1$is_args$args;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /users {
        add_header Cache-Control "no-cache";
        proxy_pass http://users.cab-dev.svc.cluster.local:8080/users;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /perimeters {
        add_header Cache-Control "no-cache";
        proxy_pass http://users.cab-dev.svc.cluster.local:8080/perimeters;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /cards/ {
        add_header Cache-Control "no-cache";
        proxy_pass http://cards-consultation.cab-dev.svc.cluster.local:8080/;
        proxy_set_header X-Forwarded-For $remote_addr;
    }
    ###  !!!! SECURITY WARNING !!!!
    ### The following configuration is suitable only if you set checkAuthenticationForCardSending to true
    ### which is the default configuration
    ###

    location /cardspub/cards {
        add_header Cache-Control "no-cache";
        proxy_pass http://cards-publication.cab-dev.svc.cluster.local:8080/cards;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    ### if you set checkAuthenticationForCardSending to false
    ### you MUST not permit to access cards endpoint via nginx
    ### and replace the previous configuration by the following conf

    #location /cardspub/cards/user {
    #  proxy_pass http://cards-publication:8080/cards/user;
    #  proxy_set_header X-Forwarded-For $remote_addr;
    #}
    #location /cardspub/cards/translateCardField {
    #  proxy_pass http://cards-publication:8080/cards/translateCardField;
    #  proxy_set_header X-Forwarded-For $remote_addr;
    #}
    ###
    ### !!! END SECURITY WARNING  !!!
    location /archives {
        add_header Cache-Control "no-cache";
        proxy_pass http://cards-consultation.cab-dev.svc.cluster.local:8080;
        proxy_set_header X-Forwarded-For $remote_addr;
    }
    location /externaldevices {
        add_header Cache-Control "no-cache";
        set $externaldevices http://external-devices.cab-dev.svc.cluster.local:8080;
        proxy_pass $externaldevices;
        proxy_set_header X-Forwarded-For $remote_addr;
    }
    location ~ "^/externaldevices/(.*)" {
        add_header Cache-Control "no-cache";
        set $externaldevices http://external-devices.cab-dev.svc.cluster.local:8080;
        proxy_pass $externaldevices/$1;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /cabcontext/ {
        add_header Cache-Control "no-cache";
        proxy_pass http://cab-context.cab-dev.svc.cluster.local:5000/;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /cab_event/ {
        add_header Cache-Control "no-cache";
        proxy_pass http://cab-event.cab-dev.svc.cluster.local:5000/;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /cab_recommendation/ {
        add_header Cache-Control "no-cache";
        proxy_pass http://cab-recommendation.cab-dev.svc.cluster.local:5000/;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /cabhistoric/ {
        add_header Cache-Control "no-cache";
        proxy_pass http://cab-historic.cab-dev.svc.cluster.local:5000/;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /cab_capitalization/ {
        proxy_set_header Host $http_host;
        proxy_pass http://cab_capitalization:5000/;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

